version: 2.1

commands:
  build-image:
    description: "Builds a Docker image"
    parameters:
      image-name:
        description: "The name of the Docker image to build"
        type: string
      tag:
        description: "The tag of the Docker image to build"
        type: string
        default: "latest"
      target:
        description: "The stage of the Docker image to build"
        type: string
        default: ""
      build-args:
        description: "The build arguments to pass to the Docker image"
        type: string
        default: ""
      platform:
        description: "The platform to build the Docker image for"
        type: string
        default: "linux/amd64,linux/arm64"
      output:
        description: "The output of the Docker image build"
        type: string
        default: "type=image,push=false"
      use-remote-cache:
        description: "Use the remote Docker layer cache"
        type: boolean
        default: true
      login:
        description: "Login to Docker Hub"
        type: boolean
        default: false
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: << parameters.use-remote-cache >>

      - run:
          name: Login to Docker Hub
          when: << parameters.login >>
          command: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin

      - run:
          name: Build Docker image
          command: |
            docker buildx build \
              --platform << parameters.platform >> \
              --tag << parameters.image-name >>:<< parameters.tag >> \
              $(if [ -n "<< parameters.target >>" ]; then echo "--target << parameters.target >>"; fi) \
              $(for arg in << parameters.build-args >>; do echo "--build-arg $arg"; done) \
              --output << parameters.output >> \
              ./images/<< parameters.image-name >>/src

jobs:
  test-image-build:
    # Install dependencies and run tests
    docker:
      - image: cimg/base:2024.09
    steps:
      - checkout
      - build-image:
          image-name: "dev-cuda"
          tag: "latest"
          platform: "linux/amd64"
          output: "type=cacheonly"
          use-remote-cache: true

  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
workflows:
  test:
    jobs:
      - test-image-build
    # - deploy:
    #     requires:
    #       - test-python
