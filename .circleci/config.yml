version: 2.1

orbs:
  docker: circleci/docker@2.7.1

commands:
  build-and-test:
    description: "Builds and tests a Docker image"
    parameters:
      name-space:
        description: "The namespace of the Docker image to build"
        type: string
      image-name:
        description: "The name of the Docker image to build"
        type: string
      use-buildkit:
        description: "Whether to use BuildKit to build the Docker image"
        type: boolean
        default: true
      extra_build_args:
        description: "The extra build arguments to pass to the Docker image"
        type: string
        default: ""
      extra_test_args:
        description: "The extra test arguments to pass to the Docker image"
        type: string
        default: ""
    steps:
      - docker/build:
          step-name: "Build image"
          image: << parameters.name-space >>/<< parameters.image-name >>
          path: images/<< parameters.image-name >>/src
          use-buildkit: << parameters.use-buildkit >>
          tag: cache-$CIRCLE_SHA1
          extra_build_args: << parameters.extra_build_args >>
      - docker/build:
          step-name: "Build test image"
          image: test-<< parameters.image-name >>
          path: ./utils/test
          use-buildkit: << parameters.use-buildkit >>
          extra_build_args: |
            --output=type=cacheonly
            --build-arg=IMAGE=<< parameters.name-space >>/<< parameters.image-name >>:cache-$CIRCLE_SHA1
            --build-context=test_root=images/<< parameters.image-name >>/tests
            << parameters.extra_test_args >>

jobs:
  test-dev-cuda:
    docker:
      - image: cimg/python:3.11
    parameters:
      cuda_version:
        type: string
        default: "12.4.1"
      os:
        type: string
        default: "ubuntu22.04"
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - checkout
      - build-and-test:
          name-space: org
          image-name: dev-cuda
          extra_build_args: |
            --platform=linux/amd64
            --build-arg=BASE_IMAGE=nvidia/cuda:<< parameters.cuda_version >>-cudnn-devel-<< parameters.os >>
          extra_test_args: |
            --platform=linux/amd64

workflows:
  test:
    jobs:
      - test-dev-cuda:
          matrix:
            parameters:
              os:
                - ubuntu22.04
                - ubuntu20.04
    # - deploy:
    #     requires:
    #       - test-python
